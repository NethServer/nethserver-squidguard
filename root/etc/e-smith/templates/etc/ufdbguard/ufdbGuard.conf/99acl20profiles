{
    use esmith::ConfigDB;
    my $db = esmith::ConfigDB->open_ro('contentfilter');
    foreach ($db->get_all_by_prop(type => 'profile')) {
        my $src = $_->prop('Src') || next;
        my $filter_key = $_->prop('Filter') || next;
        $filter_key =~ s/filter;//g;
        my $time = $_->prop('Time') || '';
        if ($time ne '') {
            $time =~ s/time;//g;
            $time = 'within "t_' . $_->key . '"';
        }
        my $filter = $db->get($filter_key);
        my $blockall = $filter->prop('BlockAll') || 'disabled';
        my $op = '!';
        if ($blockall eq 'enabled') {
            $op = '';
        }
        my $blockipaccess = $filter->prop('BlockIpAccess') || 'disabled';
        my $whitelist = $filter->prop('WhiteList') || 'disabled';
        my $blacklist = $filter->prop('BlackList') || 'disabled';
        my $blockfile = $filter->prop('BlockFileTypes') || 'disabled';
        my $blockbuiltin = $filter->prop('BlockBuiltinRules') || 'disabled';

        $OUT .= "    # Profile: ".$_->key."\n";
        $OUT .= "    src_".$_->key." $time {\n";
        $OUT .= "        pass !security";

        if ($whitelist eq 'enabled') {
            $OUT .= " nh_whitelist ";
        }
        if ($blacklist eq 'enabled') {
            $OUT .= " !nh_blacklist ";
        }
        if ($blockipaccess eq 'enabled') { 
            $OUT .= " !in-addr ";
        }
        if ($blockfile eq 'enabled') {
            $OUT .= " !files ";
        }
        if ($blockbuiltin eq 'enabled') {
            $OUT .= " !builtin ";
        }

        foreach my $c (split(/,/,$filter->prop('Categories') || '')) {
            if (exists($categories{$c})) { #do not add non-existing categories
                $OUT .= " $op\"$c\" ";
            }
        }
        if ($blockall eq 'enabled') {
           $OUT .= " none\n";
        } else {
           $OUT .= " all\n";
        }
        $OUT .= "    }\n";
    }
 
}
