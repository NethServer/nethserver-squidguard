#!/bin/bash
# SquidGuard blacklist builder .

BLPATH=/var/squidGuard/blacklists
BLFILE=$BLPATH/blacklists.tar.gz
URLFILE=/etc/squid/blacklists

DEBUG=0
tot=`date +%s`
if [ "$1" == "-d" ]; then
    DEBUG=1
    set -x
fi

curdir=`pwd`
 
if [ -d $BLPATH ] ;then
    if [ -d $BLPATH.old ]; then
        rm -rf $BLPATH.old
    fi
    mv $BLPATH $BLPATH.old 
fi
mkdir $BLPATH

function restore {
    if [ $DEBUG -eq 1 ]; then
        echo "Restoring backup: $BLPATH.old -> $BLPATH"
    fi
    rm -rf $BLPATH
    mv $BLPATH.old $BLPATH
    exit
}

function download_extract {
    if [ $DEBUG -eq 1 ]; then
        verbose=""
    else
        verbose="--quiet"
    fi
    wget $verbose -O $BLFILE $1
    if [ $? -gt 0 ] && [ ! -s $BLFILE ] ; then
        restore
    else
        /bin/tar xzf $BLFILE -C $BLPATH --exclude=*.diff --exclude=README --strip-components=1
        find $BLPATH -type d -exec chmod a+r '{}' \;
        rm -f $BLFILE 2> /dev/null
    fi
}

if [ $DEBUG -eq 1 ]; then 
    echo "Downloading..."
    t1=`date +%s`
fi
url=$(/bin/grep -v -e '^#' -e "^$" /etc/squid/blacklists)
download_extract $url
if [ $DEBUG -eq 1 ]; then 
    delta=$((`date +%s` - $t1))
    echo "End downloading. Elapsed seconds: $delta"
fi

cd $curdir

if [ $DEBUG -eq 1 ]; then 
    delta=$((`date +%s` - $t1))
    echo "done. Elapsed seconds: $delta"
fi

if [ $DEBUG -eq 1 ]; then 
    echo -n "Rebuild db..."
    t1=`date +%s`
fi

/etc/e-smith/events/actions/nethserver-squidguard-update-custom-list cron

if [ $DEBUG -eq 1 ]; then
    verbose="-d"
else
    verbose=""
fi
/usr/sbin/ufdbConvertDB $verbose $BLPATH/ &>/dev/null
chown -R squid:squid $BLPATH/
if [ -f $BLPATH/global_usage ]; then
    chmod a+r $BLPATH/global_usage
fi
if [ $DEBUG -eq 1 ]; then 
    delta=$((`date +%s` - $t1))
    echo "done. Elapsed seconds: $delta"
fi

if [ $DEBUG -eq 1 ]; then
    delta=$((`date +%s` - $tot))
    echo "Total elapsed seconds: $delta"
fi 


ufdbcachedir="/var/squidGuard/blacklists/cache.execlists"
if [ ! -d $ufdbcachedir ]; then
    mkdir -p $ufdbcachedir
    chown ufdb:squid $ufdbcachedir
    chmod 755 $ufdbcachedir
fi

/usr/sbin/ufdbsignal -C "sighup ufdbguardd" &>/dev/null
exit 0
